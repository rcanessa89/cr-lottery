service: cr-lottery

useDotenv: true

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline

custom:
  sstApp: ${self:provider.stage}-cr-lottery-infrastructure
  dbSecret: !ImportValue '${self:custom.sstApp}-dbSecret'
  bundle:
    tsConfig: ./lambda-tsconfig/tsconfig.json
    linting: false # Lint will be handle it by Nx
    externals:
      - '@nestjs/microservices'
      - '@nestjs/mapped-types'
      - 'apollo-server-fastify'
      - 'cache-manager'
      - 'class-transformer'
      - 'class-validator'
      - '@nestjs/microservices/microservices-module'
      - '@nestjs/websockets/socket-module'
      - 'class-transformer/storage'
      - 'fastify-swagger'
    forceInclude:
      - mysql

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    SERVICE: ${self:service}
    DB_SECRET: '${self:custom.dbSecret}'
  vpc:
    securityGroupIds:
      - !ImportValue '${self:custom.sstApp}-securityGroupId'
    subnetIds:
      - !ImportValue '${self:custom.sstApp}-publicSubnetId'
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ec2:CreateNetworkInterface
      Resource: '*'

functions:
  chances:
    handler: ./apps/chances/src/lambda.handler
    events:
      - http:
          path: /chances/graphql
          method: post
          cors: true
  loteria:
    handler: ./apps/loteria/src/lambda.handler
    events:
      - http:
          path: /loteria/graphql
          method: post
          cors: true
  lotto:
    handler: ./apps/lotto/src/lambda.handler
    events:
      - http:
          path: /lotto/graphql
          method: post
          cors: true
  monazos:
    handler: ./apps/monazos/src/lambda.handler
    events:
      - http:
          path: /monazos/graphql
          method: post
          cors: true
  tiempos:
    handler: ./apps/tiempos/src/lambda.handler
    events:
      - http:
          path: /tiempos/graphql
          method: post
          cors: true
  draw:
    handler: ./apps/draw/src/lambda.handler
    events:
      - http:
          path: /draw/graphql
          method: post
          cors: true
  product-resource:
    handler: ./apps/product-resource/src/lambda.handler
    timeout: 20
    events:
      - http:
          path: /product-resource/seed/{product}/{page}/{length}
          method: get
          cors: true
      - http:
          path: /product-resource/gen-types
          method: get
          cors: true
